_schema-version: '3.1'
ID: poetry-slams
description: SAP Partner Reference Application v2.0
version: 2.0.0

# -------------------------------------------------------------------------
# Parameters
# -------------------------------------------------------------------------
parameters:
  # Defines the name that is shown when a subscription of the application is done in the customer tenant
  displayname: Poetry Slam Manager
  xsappname: poetry-slams-${org}-${space}
  app-url: ${org}-${space}
  approuter-url: ${app-url}-approuter
  srv-url: ${app-url}-srv
  mtx-srv-url: ${app-url}-mtx-srv
  # Defines the deploy mode to HTML5 repository and allows parallel deployments
  deploy_mode: html5-repo
  enable-parallel-deployments: true
build-parameters:
  before-all:
    #  Defines the build parameter
    - builder: custom
      commands:
        - npm ci --omit=dev
        - npx -p @sap/cds-dk cds build --production

# -------------------------------------------------------------------------
#  Modules that are required to deploy the application
# -------------------------------------------------------------------------
modules:
  # Service module
  # Defines the microservice or application that will be serviced.
  # Contract between the service and the used microservices, and the rest of the application. It specifies what is required from the environment, and what it provides to the environment.
  - name: poetry-slams-srv
    type: nodejs
    path: gen/srv
    requires:
      - name: poetry-slams-auth
      - name: poetry-slams-destination-service
      - name: poetry-slams-service-manager
      - name: poetry-slams-registry
    provides:
      - name: srv-api
        properties:
          srv-url: ${protocol}://${srv-url}.${domain} # ${default-url}
          redirect-uris: ${protocol}://*.${app-url}.${domain}/** # Redirect URI to connect modules running on different Cloud Foundry landscapes
      - name: srv-multi-tenancy
        properties:
          tenant-delimiter: '.'
    parameters:
      buildpack: nodejs_buildpack
      disk-quota: 1024M
      memory: 512M
      routes:
        - route: ${srv-url}.${domain}
    properties:
      SUBSCRIPTION_URL: ${protocol}://\${tenant_subdomain}.${srv-url}.${domain} # ${default-url}

  # App UI resources module
  # Creates and packages the static content of the HTML5 application
  - name: poetryslammanager
    type: html5
    path: app/poetryslammanager
    build-parameters:
      build-result: dist
      builder: custom
      commands:
        - npm install
        - npm run build:cf
      supported-platforms: []

  # App UI content deployer module
  # Uploads the static content of the HTML5 application and deploys it to the HTML5 repository
  - name: poetry-slams-app-content
    type: com.sap.application.content
    path: gen
    requires:
      - name: poetry-slams-repo-host
        parameters:
          content-target: true
      - name: poetry-slams-auth
    build-parameters:
      build-result: resources
      requires:
        - artifacts:
            - poetryslammanager.zip
          name: poetryslammanager
          target-path: resources/

  # MTXs (Multitenancy, Toggles, Extensibility) Module (Onboarding, Upgrading)
  - name: poetry-slams-mtx-srv
    type: nodejs
    path: gen/srv
    requires:
      - name: poetry-slams-auth
      - name: poetry-slams-destination-service
      - name: poetry-slams-service-manager
        properties:
          SUBSCRIPTION_URL: ${protocol}://\${tenant_subdomain}.${app-url}.${domain}/poetryslammanager # ${default-url}
    parameters:
      memory: 1024M
      disk-quota: 1024M
      routes:
        - route: ${mtx-srv-url}.${domain}
    provides:
      - name: mtx-binding
        properties:
          app-fqdn: ${mtx-srv-url}.${domain}
          app-url: ${protocol}://${mtx-srv-url}.${domain}
      - name: poetry-slams-mtx-srv-destination
        public: true
        properties:
          name: mtx-srv-api
          url: ${protocol}://${mtx-srv-url}.${domain}
          forwardAuthToken: true
      - name: mtx-srv-api # required by consumers of CAP services (e.g. approuter)
        properties:
          mtx-srv-url: ${protocol}://${mtx-srv-url}.${domain} # ${default-url}

  # Application Router
  # Standalone Custom Application Router
  - name: poetry-slams-approuter
    type: approuter.nodejs
    path: approuter
    parameters:
      disk-quota: 512M
      memory: 512M
      routes:
        - route: ${approuter-url}.${domain}
        - route: '*.${app-url}.${domain}'
    provides:
      - name: approuter-binding
        properties:
          app-fqdn: ${approuter-url}.${domain}
          app-url: ${protocol}://${approuter-url}.${domain}
    requires:
      - name: srv-api
        group: destinations
        properties:
          name: srv-api # must be used in xs-app.json as well
          url: ~{srv-url}
          forwardAuthToken: true
      - name: poetry-slams-auth
      - name: poetry-slams-destination-service
      - name: poetry-slams-registry
      - name: poetry-slams-html5-runtime
    properties:
      TENANT_HOST_PATTERN: '^(.*).${app-url}.${domain}'
      # prettier-ignore
      httpHeaders: "[{ \"Content-Security-Policy\": \"default-src 'self' https://sapui5.hana.ondemand.com; frame-ancestors 'self' https://*.hana.ondemand.com; object-src 'none';\"}]"
      CORS:
        - uriPattern: .*
          allowedOrigin:
            - host: '*.${app-url}.${domain}'
              protocol: 'https'

# -------------------------------------------------------------------------
# Resources/Services that are required to run the deployed application
# -------------------------------------------------------------------------
resources:
  # HTML5 app repository
  # Hosts and serves the HTML5 application so that it is accessible via internet browsers
  - name: poetry-slams-repo-host
    type: org.cloudfoundry.managed-service
    parameters:
      service: html5-apps-repo
      service-name: poetry-slams-html5-srv
      service-plan: app-host

  # Destination service
  # Offers a predefined configuration that simplifies connecting to the service
  - name: poetry-slams-destination-service
    type: org.cloudfoundry.managed-service
    parameters:
      service: destination
      service-plan: lite
      config:
        HTML5Runtime_enabled: true

  # Authorization XSUAA service
  # Manages authentication, single sign-on (SSO), user management, and provides a way to manage authorizations based on scopes and role collections
  - name: poetry-slams-auth
    type: org.cloudfoundry.managed-service
    requires:
      - name: srv-api
    parameters:
      config:
        tenant-mode: shared
        xsappname: ${xsappname}
        oauth2-configuration:
          redirect-uris:
            - ~{srv-api/redirect-uris} # Redirect to connect modules running on different Cloud Foundry landscapes
            - http://localhost # Redirect for local testing using Postman
      path: ./xs-security.json
      service: xsuaa
      service-name: poetry-slams-auth
      service-plan: broker

  # Application Registry
  # Registers application for use by subscribers
  - name: poetry-slams-registry
    type: org.cloudfoundry.managed-service
    requires:
      - name: mtx-binding
      - name: approuter-binding
    parameters:
      service: saas-registry
      service-plan: application
      config:
        xsappname: ${xsappname}
        appName: ${xsappname}
        displayName: ${displayname}
        description: ${displayname}
        category: 'Category'
        appUrls:
          getDependencies: ~{approuter-binding/app-url}/-/cds/saas-provisioning/dependencies
          onSubscription: ~{mtx-binding/app-url}/-/cds/saas-provisioning/tenant/{tenantId}
          callbackTimeoutMillis: 300000

  # HTML5 Runtime (HTML5 Application Repository Service)
  - name: poetry-slams-html5-runtime
    type: org.cloudfoundry.managed-service
    parameters:
      service: html5-apps-repo
      service-plan: app-runtime

  # Service Manager
  - name: poetry-slams-service-manager
    type: org.cloudfoundry.managed-service
    parameters:
      service: service-manager
      service-plan: container
    properties:
      hdi-service-name: ${service-name}

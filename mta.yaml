_schema-version: 3.3.0
ID: poetry-slams
description: SAP Partner Reference Application v2.0
version: 2.0.0

# -------------------------------------------------------------------------
# Parameters
# -------------------------------------------------------------------------
parameters:
  # Defines the deploy mode to HTML5 repository and allows parallel deployments
  deploy_mode: html5-repo
  enable-parallel-deployments: true
build-parameters:
  before-all:
    #  Defines the build parameter
    - builder: custom
      commands:
        - npm ci --omit=dev
        - npx -p @sap/cds-dk cds build --production

# -------------------------------------------------------------------------
#  Modules that are required to deploy the application
# -------------------------------------------------------------------------
modules:
  # Service module
  # Defines the microservice or application that will be serviced.
  # Contract between the service and the used microservices, and the rest of the application. It specifies what is required from the environment, and what it provides to the environment.
  - name: poetry-slams-srv
    type: nodejs
    path: gen/srv
    requires:
      - name: poetry-slams-auth
      - name: poetry-slams-auditlog
      - name: poetry-slams-cloud-logging
      - name: poetry-slams-db
      - name: poetry-slams-destination-service
    provides:
      - name: srv-api # required by consumers of CAP services (e.g. approuter)
        properties:
          srv-url: ${default-url}
    parameters:
      buildpack: nodejs_buildpack
      readiness-health-check-http-endpoint: /health
      readiness-health-check-type: http
    build-parameters:
      builder: npm-ci

  # App UI resources modules
  # Creates and packages the static content of the HTML5 applications
  - name: poetryslams
    type: html5
    path: app/poetryslams
    build-parameters:
      build-result: dist
      builder: custom
      commands:
        - npm install
        - npm run build:cf
      supported-platforms: []

  - name: visitors
    type: html5
    path: app/visitors
    build-parameters:
      build-result: dist
      builder: custom
      commands:
        - npm install
        - npm run build:cf
      supported-platforms: []

  # App UI content deployer module
  # Uploads the static content of the HTML5 application and deploys it to the HTML5 repository
  - name: poetry-slams-app-content
    type: com.sap.application.content
    path: .
    requires:
      - name: poetry-slams-repo-host
        parameters:
          content-target: true
    build-parameters:
      build-result: resources
      requires:
        - artifacts:
            - poetryslams.zip
          name: poetryslams
          target-path: resources/
        - artifacts:
            - visitors.zip
          name: visitors
          target-path: resources/

  # MTX module
  # Handles multitenancy
  - name: poetry-slams-mtx
    type: nodejs
    path: gen/mtx/sidecar
    build-parameters:
      builder: npm-ci
    parameters:
      memory: 256M
      disk-quota: 512M
    provides:
      - name: mtx-api
        properties:
          mtx-url: ${default-url}
    requires:
      - name: poetry-slams-db
      - name: poetry-slams-auth
      - name: poetry-slams-cloud-logging
      - name: poetry-slams-registry
      - name: poetry-slams-destination-service
      - name: poetry-slams-html5-runtime
      - name: app-api
        properties:
          SUBSCRIPTION_URL: ~{app-protocol}://\${tenant_subdomain}.~{app-uri}

  # Approuter
  # Main entry point, routes subscription(i.e. tenant)-specific URLs and is used to deliver the getDependencies information
  - name: poetry-slams
    type: approuter.nodejs
    path: app/router
    parameters:
      keep-existing-routes: true
      routes:
        - route: '*.${default-uri}' # generic route for all subscriptions
      disk-quota: 256M
      memory: 256M
    properties:
      TENANT_HOST_PATTERN: '^(.*).${default-uri}'
      # prettier-ignore
      httpHeaders: "[{ \"Content-Security-Policy\": \"default-src 'self' https://sapui5.hana.ondemand.com; frame-ancestors 'self' https://*.hana.ondemand.com; object-src 'none';\"}]"
      CORS:
        - uriPattern: .*
          allowedOrigin:
            - host: '*.${default-uri}'
              protocol: 'https'
    requires:
      - name: srv-api
        group: destinations
        properties:
          name: srv-api # must be used in xs-app.json as well
          url: ~{srv-url}
          forwardAuthToken: true
      - name: mtx-api
        group: destinations
        properties:
          name: mtx-api # must be used in xs-app.json as well
          url: ~{mtx-url}
      - name: poetry-slams-auth
      - name: poetry-slams-auditlog
      - name: poetry-slams-cloud-logging
      - name: poetry-slams-registry
      - name: poetry-slams-html5-runtime
      - name: poetry-slams-destination-service
    provides:
      - name: app-api
        properties:
          app-protocol: ${protocol}
          app-uri: ${default-uri}
          redirect-uris: ${protocol}://*.${default-uri}/** # Redirect URI to connect modules running on different Cloud Foundry landscapes (e.g. eu10 / eu10-004)

  # The service broker for the poetry slam manager
  # Directly exposes the author reading service
  - name: poetry-slams-servicebroker
    type: nodejs
    path: broker
    parameters:
      disk-quota: 1024M
      memory: 128M
      health-check-timeout: 180
    requires:
      - name: poetry-slams-auth
      - name: poetry-slams-auditlog
      - name: srv-api
    build-parameters:
      builder: npm-ci
    properties:
      SBF_CATALOG_SUFFIX: ${space} # Make the service broker unique in the deployed space
      SBF_ENABLE_AUDITLOG: true
      SBF_BROKER_CREDENTIALS: '{ "${generated-user}": "${generated-password}" }' # use a random password that is generated during deployment (not that this will change the password with every deplyoment)
      SBF_SERVICE_CONFIG:
        psm-servicebroker:
          extend_xssecurity:
            per_plan:
              fullaccess:
                authorities:
                  - '$XSMASTERAPPNAME.PoetrySlamFull'
              readonlyaccess:
                authorities:
                  - '$XSMASTERAPPNAME.PoetrySlamReadonly'
              namedaccess:
                authorities:
          extend_credentials:
            shared:
              endpoints:
                psm-servicebroker: '~{srv-api/srv-url}' # Tenant-specific OData endpoint for remote integrations

# -------------------------------------------------------------------------
# Resources/Services that are required to run the deployed application
# -------------------------------------------------------------------------
resources:
  # HTML5 app repository
  # Hosts and serves the HTML5 application so that it is accessible via internet browsers
  - name: poetry-slams-repo-host
    type: org.cloudfoundry.managed-service
    parameters:
      service: html5-apps-repo
      service-name: poetry-slams-html5-srv
      service-plan: app-host

  # Destination service
  # Offers a predefined configuration that simplifies connecting to the service
  - name: poetry-slams-destination-service
    type: org.cloudfoundry.managed-service
    parameters:
      service: destination
      service-plan: lite

  # Authorization XSUAA service
  # Manages authentication, single sign-on (SSO), user management, and provides a way to manage authorizations based on scopes and role collections
  - name: poetry-slams-auth
    type: org.cloudfoundry.managed-service
    requires:
      - name: app-api
    parameters:
      config:
        tenant-mode: shared
        xsappname: poetry-slams-${org}-${space}
        oauth2-configuration:
          redirect-uris:
            - ~{app-api/redirect-uris} # Redirect to connect modules running on different Cloud Foundry landscapes (e.g. eu10 / eu10-004)
            - http://localhost # Redirect for local testing with the service broker
      path: ./xs-security.json
      service: xsuaa
      service-plan: broker

  # Application Registry
  # Registers application for use by subscribers
  - name: poetry-slams-registry
    type: org.cloudfoundry.managed-service
    requires:
      - name: mtx-api
    parameters:
      service: saas-registry
      service-plan: application
      config:
        xsappname: poetry-slams-${org}-${space}
        appName: poetry-slams-${org}-${space}
        displayName: Poetry Slam Manager
        description: Manage poetry slam events and bookings of artists and visitors.
        category: 'Applications / Multi-Customer Partner Solutions'
        appUrls:
          getDependencies: ~{mtx-api/mtx-url}/-/cds/saas-provisioning/dependencies
          onSubscription: ~{mtx-api/mtx-url}/-/cds/saas-provisioning/tenant/{tenantId}
          onSubscriptionAsync: true
          onUnSubscriptionAsync: true
          onUpdateDependenciesAsync: true
          callbackTimeoutMillis: 300000 # Increase if your deployments are taking longer than that

  # Service Manager
  # Manage HANA HDI Containers
  - name: poetry-slams-db
    type: org.cloudfoundry.managed-service
    parameters:
      service: service-manager
      service-plan: container

  # HTML5 Runtime (HTML5 Application Repository Service)
  - name: poetry-slams-html5-runtime
    type: org.cloudfoundry.managed-service
    parameters:
      service: html5-apps-repo
      service-plan: app-runtime

  # Audit Log Service
  # For automatic audit logging
  - name: poetry-slams-auditlog
    type: org.cloudfoundry.managed-service
    parameters:
      service: auditlog
      service-plan: premium 

  # Cloud Logging Service
  - name: poetry-slams-cloud-logging
    type: org.cloudfoundry.managed-service
    parameters:
      service: cloud-logging
      service-plan: standard
      config:
        ingest_otlp:
          enabled: true
        backend:
          api_enabled: true
